from aiogram import F,Router
from aiogram.types import Message,CallbackQuery
from aiogram.fsm.state import State,StatesGroup
from aiogram.fsm.context import FSMContext
from inlinekeyaborad import keyboard2


call_back = Router()

class Form(StatesGroup):
    Gems = State()

@call_back.callback_query(F.data.in_(['30','250','500','1200','2500']))
async def message_handler_callback0(callback:CallbackQuery,state:FSMContext):
    data = await state.get_data()
    total_gems =data.get('total_gems',0)
    total_gems += int(callback.data)
    await state.update_data(total_gems=total_gems)
    await callback.message.answer(f'–û—Ç–ª–∏—á–Ω–æ! –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∞ ‚Äî —Ç–µ–ø–µ—Ä—å —Ç–∞–º {total_gems} –≥–µ–º–æ–≤ üíé')

@call_back.callback_query(F.data =='clear')
async def message_handler_callback1(callback:CallbackQuery,state:FSMContext):
    data = await state.get_data()
    total_gems = data.get('total_gems')
    total_gems = 0
    await state.update_data(total_gems=total_gems)
    await callback.message.answer('–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞! üßπ‚úÖ')

@call_back.callback_query(F.data =='buy')
async def message_handler_callback2(callback:CallbackQuery,state:FSMContext):
    data = await state.get_data()
    total_gems = data.get('total_gems',0)
    if total_gems == 0:
        await callback.message.answer('''üõí –ö–æ—Ä–∑–∏–Ω–∞ –≤—ã–≥–ª—è–¥–∏—Ç –≥—Ä—É—Å—Ç–Ω–æ‚Ä¶ –ü–æ—Ä–∞ –µ—ë –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å! –ó–∞–∫–∏–Ω—å —á—Ç–æ-–Ω–∏–±—É–¥—å, –∏ –º—ã —Å—Ä–∞–∑—É –æ—Ç–∫—Ä–æ–µ–º –æ–ø–ª–∞—Ç—É üí≥''')
    else:
        await callback.message.answer(f'''üéâ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º —É–¥–æ–±–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã!
        
    üîê –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ —á–µ—Ä–µ–∑ CryptoBot - –û–ø–ª–∞—á–∏–≤–∞–π –≤ USDT, BTC, ETH –∏ –¥—Ä—É–≥–∏—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –º–æ–Ω–µ—Ç–∞—Ö ‚Äî —É–¥–æ–±–Ω–æ –∏ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    
    üí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞ —á–µ—Ä–µ–∑ Tinkoff - –û–ø–ª–∞—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é —Å –∫–∞—Ä—Ç—ã''',reply_markup=keyboard2)


